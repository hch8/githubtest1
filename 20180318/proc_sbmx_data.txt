CREATE PROCEDURE PROC_SBMX_DATA (IN userid VARCHAR(50)) LANGUAGE SQL
BEGIN
	DECLARE oUserDeptId varchar(500);
	DECLARE oFstDeptTmp varchar(500);
  DECLARE oFstDeptId varchar(500);
  DECLARE oChildIds varchar(4000);
  
	DECLARE oTempChild VARCHAR(4000);
  DECLARE oTemp VARCHAR(4000);
  
  #---------程序开始----------------
  # Step 1 获取用户的部门ID
  select group_concat(orgnize.id) into oUserDeptId
	from vip_common_dev.sb_sys_user suser 
	join t_common_orgnize_user_responsibility uo on uo.user_id=suser.id
	join t_common_orgnize orgnize on uo.orgnize_id=orgnize.id 
	where suser.id=userid;
  
  # Step2 获取最顶级部门的ID
  set oFstDeptTmp = oUserDeptId;
  while oFstDeptTmp is not null
  do
    set oFstDeptId = oFstDeptTmp;
  	select group_concat(orgnize.parent_id) into oFstDeptTmp from t_common_orgnize orgnize where FIND_IN_SET(id,oFstDeptTmp)>0;
  end while;
  
  # Step 3 获取所有区域的ID和名称,插入临时表
  select group_concat(id) into oChildIds from t_common_orgnize where FIND_IN_SET(parent_id,oFstDeptId)>0;
  
  drop table if exists dept_table_tmp;
  create temporary table dept_table_tmp (
		id varchar(50) primary key,
		area_name varchar(50)
	);
	
	drop table if exists dept_table;
  create temporary table dept_table like dept_table_tmp;
	
	insert into dept_table select id,name from t_common_orgnize where FIND_IN_SET(id,oChildIds)>0;
	
	# Step 4 查询每个区域的子部门，插入临时表
	while oChildIds is not null
	do
		insert into dept_table_tmp 
		select orgnize.id,dept.area_name from t_common_orgnize orgnize
		left join dept_table dept on dept.id=orgnize.parent_id
		where FIND_IN_SET(orgnize.parent_id,oChildIds)>0;
		
		insert into dept_table select id,area_name from dept_table_tmp;
		delete from dept_table_tmp;
		
		select group_concat(id) into oChildIds from t_common_orgnize where FIND_IN_SET(parent_id,oChildIds)>0;
	end while;
	
  # Step 5 获取用户所在部门的所有子部门
  select GROUP_CONCAT(orgnize.id) into oTempChild
	from vip_common_dev.sb_sys_user suser 
	join t_common_orgnize_user_responsibility uo on uo.user_id=suser.id
	join t_common_orgnize orgnize on uo.orgnize_id=orgnize.id 
	where suser.id=userid;

	SET oTemp = oTempChild;
  
  WHILE oTempChild IS NOT NULL
  DO
	  SET oTemp = CONCAT(oTemp,',',oTempChild);
	  SELECT GROUP_CONCAT(id) INTO oTempChild FROM t_common_orgnize WHERE FIND_IN_SET(parent_id,oTempChild) > 0;
  END WHILE;
  
  # Step 6 获取最终数据
  select 
	  empInfo.job_num as 参保人工号,
	  concat(substr(socialBase.fy_date,1,4),substr(socialBase.fy_date,6,2)) as 参保月份,
	  areatmp.area_name as 区域,
	  orgnize.name as 门店,
	  '' as 主体简称,
	  empBase.name as 参保人,
	  empBase.id_card as 身份证号,
	  socialSure.account as 社保号,
	  socialBase.insurance_address_name as 参保地,
	  case when empBase.residence_type='30025001' and empBase.residence_city=socialBase.insurance_address_id then '本地农村' 
	       when empBase.residence_type='30025001' and empBase.residence_city<>socialBase.insurance_address_id then '外地农村' 
	       when empBase.residence_type='30025002' and empBase.residence_city=socialBase.insurance_address_id then '本地城镇'
	       when empBase.residence_type='30025002' and empBase.residence_city<>socialBase.insurance_address_id then '外地城镇' end as 户籍,
	  item.company_base_1 as   养老单位缴费基数,   
	  item.company_ratio_1 as  养老单位缴费比例,  
	  item.company_amount_1 as    养老单位缴费金额,    
	  item.personal_base_1 as  养老个人缴费基数,  
	  item.personal_ratio_1 as 养老个人缴费比例, 
	  item.personal_amount_1 as   养老个人缴费金额,   
	  item.company_base_5 as   失业单位缴费基数  ,   
	  item.company_ratio_5 as  失业单位缴费比例   ,  
	  item.company_amount_5 as    失业单位缴费金额 ,    
	  item.personal_base_5 as  失业个人缴费基数   ,  
	  item.personal_ratio_5 as 失业个人缴费比例    , 
	  item.personal_amount_5 as   失业个人缴费金额  , 
	  item.company_base_2 as   工伤单位缴费基数 ,   
	  item.company_ratio_2 as  工伤单位缴费比例  ,  
	  item.company_amount_2 as    工伤单位缴费金额,    
	  item.personal_base_2 as  工伤个人缴费基数  ,  
	  item.personal_ratio_2 as 工伤个人缴费比例   , 
	  item.personal_amount_2      工伤个人缴费金额,
	  item.company_base_4 as   生育单位缴费基数 ,   
	  item.company_ratio_4 as  生育单位缴费比例  ,  
	  item.company_amount_4 as    生育单位缴费金额,    
	  item.personal_base_4 as  生育个人缴费基数  ,  
	  item.personal_ratio_4 as 生育个人缴费比例   , 
	  item.personal_amount_4 as   生育个人缴费金额 ,
	  item.company_base_3 as   医疗单位缴费基数  ,   
	  item.company_ratio_3 as  医疗单位缴费比例   ,  
	  item.company_amount_3 as    医疗单位缴费金额 ,    
	  item.personal_base_3 as  医疗个人缴费基数   ,  
	  item.personal_ratio_3 as 医疗个人缴费比例    , 
	  item.personal_amount_3 as   医疗个人缴费金额  ,   
	  item.company_base_7 as   补充医疗单位缴费基数 ,   
	  item.company_ratio_7 as  补充医疗单位缴费比例  ,  
	  item.company_amount_7 as    补充医疗单位缴费金额,    
	  item.personal_base_7 as  补充医疗个人缴费基数  ,  
	  item.personal_ratio_7 as 补充医疗个人缴费比例   , 
	  item.personal_amount_7 as   补充医疗个人缴费金额 ,  
	  item.company_base_6 as   重疾单位缴费基数 ,   
	  item.company_ratio_6 as  重疾单位缴费比例  ,  
	  item.company_amount_6 as    重疾单位缴费金额,    
	  item.personal_base_6 as  重疾个人缴费基数  ,  
	  item.personal_ratio_6 as 重疾个人缴费比例   , 
	  item.personal_amount_6 as   重疾个人缴费金额 ,   
	  socialBase.company_amount as 企业总金额,
	  socialBase.personal_amount as 个人总金额,
	  socialBase.total_amount as 合计总金额 
	from t_emp_base empBase 
	join t_settlement_bill bill on bill.name='深圳前海新煤电子商务有限公司_2018-03_结算单 0183'
	join t_settlement_bill_social socialBase on socialBase.employee_id=empBase.id and socialBase.settle_id=bill.id
	left join t_emp_info empInfo on empInfo.emp_id=empBase.id
	left join t_emp_comp_history ech on ech.emp_id=empBase.id
	left join t_common_orgnize orgnize on orgnize.id=ech.dept_id
	left join dept_table areatmp on areatmp.id=orgnize.id
	LEFT JOIN (select employee_id,max(account) account from t_welfare_emp_social_sure group by employee_id) socialSure on socialSure.employee_id=empBase.id
	LEFT JOIN (
	  select base_id,
	    max(company_base_1) as   company_base_1,
	    max(company_ratio_1) as  company_ratio_1,
	    max(company_amount_1) as    company_amount_1,
	    max(personal_base_1) as  personal_base_1,
	    max(personal_ratio_1) as personal_ratio_1,
	    max(personal_amount_1) as   personal_amount_1,
	    max(company_base_5) as   company_base_5,
	    max(company_ratio_5) as  company_ratio_5,
	    max(company_amount_5) as    company_amount_5,
	    max(personal_base_5) as  personal_base_5,
	    max(personal_ratio_5) as personal_ratio_5,
	    max(personal_amount_5) as   personal_amount_5,
	    max(company_base_2) as   company_base_2,
	    max(company_ratio_2) as  company_ratio_2,
	    max(company_amount_2) as    company_amount_2,
	    max(personal_base_2) as  personal_base_2,
	    max(personal_ratio_2) as personal_ratio_2,
	    max(personal_amount_2) as   personal_amount_2,
	    max(company_base_4) as   company_base_4,
	    max(company_ratio_4) as  company_ratio_4,
	    max(company_amount_4) as    company_amount_4,
	    max(personal_base_4) as  personal_base_4,
	    max(personal_ratio_4) as personal_ratio_4,
	    max(personal_amount_4) as   personal_amount_4,
	    max(company_base_3) as   company_base_3,
	    max(company_ratio_3) as  company_ratio_3,
	    max(company_amount_3) as    company_amount_3,
	    max(personal_base_3) as  personal_base_3,
	    max(personal_ratio_3) as personal_ratio_3,
	    max(personal_amount_3) as   personal_amount_3,
	    max(company_base_7) as   company_base_7,
	    max(company_ratio_7) as  company_ratio_7,
	    max(company_amount_7) as    company_amount_7,
	    max(personal_base_7) as  personal_base_7,
	    max(personal_ratio_7) as personal_ratio_7,
	    max(personal_amount_7) as   personal_amount_7,
	    max(company_base_6) as   company_base_6,
	    max(company_ratio_6) as  company_ratio_6,
	    max(company_amount_6) as    company_amount_6,
	    max(personal_base_6) as  personal_base_6,
	    max(personal_ratio_6) as personal_ratio_6,
	    max(personal_amount_6) as   personal_amount_6
	  from (select 
	    item.settlement_bill_pro_id as base_id,
	    case when item.item_type='10002001' then item.company_base else 0 end as company_base_1,
	    case when item.item_type='10002001' then item.company_ratio else 0 end as company_ratio_1,
	    case when item.item_type='10002001' then item.company_amount else 0 end as company_amount_1,
	    case when item.item_type='10002001' then item.personal_base else 0 end as personal_base_1,
	    case when item.item_type='10002001' then item.personal_ratio else 0 end as personal_ratio_1,
	    case when item.item_type='10002001' then item.personal_amount else 0 end as personal_amount_1,
	    case when item.item_type='10002005' then item.company_base else 0 end as company_base_5,
	    case when item.item_type='10002005' then item.company_ratio else 0 end as company_ratio_5,
	    case when item.item_type='10002005' then item.company_amount else 0 end as company_amount_5,
	    case when item.item_type='10002005' then item.personal_base else 0 end as personal_base_5,
	    case when item.item_type='10002005' then item.personal_ratio else 0 end as personal_ratio_5,
	    case when item.item_type='10002005' then item.personal_amount else 0 end as personal_amount_5,
	    case when item.item_type='10002002' then item.company_base else 0 end as company_base_2,
	    case when item.item_type='10002002' then item.company_ratio else 0 end as company_ratio_2,
	    case when item.item_type='10002002' then item.company_amount else 0 end as company_amount_2,
	    case when item.item_type='10002002' then item.personal_base else 0 end as personal_base_2,
	    case when item.item_type='10002002' then item.personal_ratio else 0 end as personal_ratio_2,
	    case when item.item_type='10002002' then item.personal_amount else 0 end as personal_amount_2,
	    case when item.item_type='10002004' then item.company_base else 0 end as company_base_4,
	    case when item.item_type='10002004' then item.company_ratio else 0 end as company_ratio_4,
	    case when item.item_type='10002004' then item.company_amount else 0 end as company_amount_4,
	    case when item.item_type='10002004' then item.personal_base else 0 end as personal_base_4,
	    case when item.item_type='10002004' then item.personal_ratio else 0 end as personal_ratio_4,
	    case when item.item_type='10002004' then item.personal_amount else 0 end as personal_amount_4,
	    case when item.item_type='10002003' then item.company_base else 0 end as company_base_3,
	    case when item.item_type='10002003' then item.company_ratio else 0 end as company_ratio_3,
	    case when item.item_type='10002003' then item.company_amount else 0 end as company_amount_3,
	    case when item.item_type='10002003' then item.personal_base else 0 end as personal_base_3,
	    case when item.item_type='10002003' then item.personal_ratio else 0 end as personal_ratio_3,
	    case when item.item_type='10002003' then item.personal_amount else 0 end as personal_amount_3,	   
	    case when item.item_type='10002007' then item.company_base else 0 end as company_base_7,
	    case when item.item_type='10002007' then item.company_ratio else 0 end as company_ratio_7,
	    case when item.item_type='10002007' then item.company_amount else 0 end as company_amount_7,
	    case when item.item_type='10002007' then item.personal_base else 0 end as personal_base_7,
	    case when item.item_type='10002007' then item.personal_ratio else 0 end as personal_ratio_7,
	    case when item.item_type='10002007' then item.personal_amount else 0 end as personal_amount_7,
	    case when item.item_type='10002006' then item.company_base else 0 end as company_base_6,
	    case when item.item_type='10002006' then item.company_ratio else 0 end as company_ratio_6,
	    case when item.item_type='10002006' then item.company_amount else 0 end as company_amount_6,
	    case when item.item_type='10002006' then item.personal_base else 0 end as personal_base_6,
	    case when item.item_type='10002006' then item.personal_ratio else 0 end as personal_ratio_6,
	    case when item.item_type='10002006' then item.personal_amount else 0 end as personal_amount_6
	  from t_settlement_bill_social_items item ) a
	  group by base_id
	) item ON item.base_id=socialBase.id
	where FIND_IN_SET(orgnize.id,oTemp) > 0 ;
	
END



